name: Docker CI/CD Pipeline

# Xác định sự kiện trigger cho pipeline, trong trường hợp này là push lên nhánh master
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        # Sử dụng action "checkout" để sao copy code từ repository vào máy ảo Ubuntu
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        # Sử dụng action "docker/login-action" để đăng nhập vào Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Log in to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build Docker images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Chat.API Docker image
        run: docker buildx build --platform linux/arm64,linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/api-service:latest --push -f Chat.API/Dockerfile .

      # - name: Build SendProcessor Docker image
      #   run: docker buildx build --platform linux/arm64,linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/send-processor-service:latest --push -f SendProcessor/Dockerfile .

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # SSH to the server and pull the latest images, then run them
      - name: SSH into server and deploy Docker containers
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }} # You can use SSH key instead for better security
          script: |
            # Deploy Chat.API container
            docker stop api-service || true
            docker rm api-service || true
            docker rmi $(docker images ${{ secrets.DOCKERHUB_USERNAME }}/api-service:latest -q) || true
            # docker pull ${{ secrets.DOCKERHUB_USERNAME }}/api-service:latest
            # docker run -d --name api-service -p 4000:8080 -v api-service-data:/root/.aspnet/DataProtection-Keys ${{ secrets.DOCKERHUB_USERNAME }}/api-service:latest

            # Deploy SendProcessor container
            # docker stop send-processor-service || true
            # docker rm send-processor-service || true
            # docker rmi $(docker images ${{ secrets.DOCKERHUB_USERNAME }}/send-processor-service:latest -q) || true
            # docker pull ${{ secrets.DOCKERHUB_USERNAME }}/send-processor-service:latest
            # docker run -d --name send-processor-service -p 4100:8080 -v send-processor-service-data:/root/.aspnet/DataProtection-Keys ${{ secrets.DOCKERHUB_USERNAME }}/send-processor-service:latest
