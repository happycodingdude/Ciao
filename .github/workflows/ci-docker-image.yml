name: Docker CI/CD Pipeline

# Xác định sự kiện trigger cho pipeline, trong trường hợp này là push lên nhánh master
on:
  push:
    branches:
      - master

jobs:
  build-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        # Sử dụng action "checkout" để sao copy code từ repository vào máy ảo Ubuntu
        uses: actions/checkout@v3

      - name:
          Login to Docker Hub
          # Sử dụng action "docker/login-action" để đăng nhập vào Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      #  # Set up .NET Core SDK
      # - name: Setup .NET
      #   uses: actions/setup-dotnet@v3
      #   with:
      #     dotnet-version: '8.0'

      #   # Restore dependencies
      # - name: Restore dependencies
      #   run: dotnet restore

      #  # Build the project
      # - name: Build the project
      #   run: dotnet build -c Release

      #  # Publish the application (for deployment)
      # - name: Publish the app
      #   run: dotnet publish -c Release -o ./publish


      # Log in to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build Docker image
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image
        run: docker buildx build --platform linux/arm64,linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/ciao-api:latest --push .        

      # Push Docker image to Docker Hub
      # - name: Push Docker image
      # run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/ciao-api:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build-api

    steps:
      # SSH to the server and pull the latest image, then run it
      - name: SSH into server and pull/run Docker image
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }} # You can use SSH key instead for better security
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/ciao-api:latest
            docker stop ciao-api || true
            docker rm ciao-api || true
            docker run -d --name ciao-api -p 4000:8080 ${{ secrets.DOCKERHUB_USERNAME }}/ciao-api:latest
