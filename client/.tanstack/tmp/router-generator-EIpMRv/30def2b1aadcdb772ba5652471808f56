/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ConversationsRouteRouteImport } from './routes/conversations/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ConversationsIndexRouteImport } from './routes/conversations/index'
import { Route as AuthIndexRouteImport } from './routes/auth/index'
import { Route as ConversationsConversationIdRouteImport } from './routes/conversations/$conversationId'

const ConversationsRouteRoute = ConversationsRouteRouteImport.update({
  id: '/conversations',
  path: '/conversations',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ConversationsIndexRoute = ConversationsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ConversationsRouteRoute,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/auth/',
  path: '/auth/',
  getParentRoute: () => rootRouteImport,
} as any)
const ConversationsConversationIdRoute =
  ConversationsConversationIdRouteImport.update({
    id: '/$conversationId',
    path: '/$conversationId',
    getParentRoute: () => ConversationsRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/conversations': typeof ConversationsRouteRouteWithChildren
  '/conversations/$conversationId': typeof ConversationsConversationIdRoute
  '/auth': typeof AuthIndexRoute
  '/conversations/': typeof ConversationsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/conversations/$conversationId': typeof ConversationsConversationIdRoute
  '/auth': typeof AuthIndexRoute
  '/conversations': typeof ConversationsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/conversations': typeof ConversationsRouteRouteWithChildren
  '/conversations/$conversationId': typeof ConversationsConversationIdRoute
  '/auth/': typeof AuthIndexRoute
  '/conversations/': typeof ConversationsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/conversations'
    | '/conversations/$conversationId'
    | '/auth'
    | '/conversations/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/conversations/$conversationId' | '/auth' | '/conversations'
  id:
    | '__root__'
    | '/'
    | '/conversations'
    | '/conversations/$conversationId'
    | '/auth/'
    | '/conversations/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ConversationsRouteRoute: typeof ConversationsRouteRouteWithChildren
  AuthIndexRoute: typeof AuthIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/conversations': {
      id: '/conversations'
      path: '/conversations'
      fullPath: '/conversations'
      preLoaderRoute: typeof ConversationsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/conversations/': {
      id: '/conversations/'
      path: '/'
      fullPath: '/conversations/'
      preLoaderRoute: typeof ConversationsIndexRouteImport
      parentRoute: typeof ConversationsRouteRoute
    }
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/conversations/$conversationId': {
      id: '/conversations/$conversationId'
      path: '/$conversationId'
      fullPath: '/conversations/$conversationId'
      preLoaderRoute: typeof ConversationsConversationIdRouteImport
      parentRoute: typeof ConversationsRouteRoute
    }
  }
}

interface ConversationsRouteRouteChildren {
  ConversationsConversationIdRoute: typeof ConversationsConversationIdRoute
  ConversationsIndexRoute: typeof ConversationsIndexRoute
}

const ConversationsRouteRouteChildren: ConversationsRouteRouteChildren = {
  ConversationsConversationIdRoute: ConversationsConversationIdRoute,
  ConversationsIndexRoute: ConversationsIndexRoute,
}

const ConversationsRouteRouteWithChildren =
  ConversationsRouteRoute._addFileChildren(ConversationsRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ConversationsRouteRoute: ConversationsRouteRouteWithChildren,
  AuthIndexRoute: AuthIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
