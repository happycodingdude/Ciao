version: "3.7"

services:
  # mongodb primary
  mongod1:
    container_name: mongod1
    image: mongo
    env_file:
      - .env
    ports:
      - "2701:27017"
    volumes:
      - ./mongo-db/data1:/data/db
      - ./scripts/keyfile:/scripts/keyfile
    depends_on:
      - mongod2
      - mongod3
    command: "mongod --bind_ip_all --replSet my-replica-set --keyFile /scripts/keyfile"
    networks:
      - my-mongo-cluster
    restart: always

  # mongodb secondary 1
  mongod2:
    container_name: mongod2
    image: mongo
    ports:
      - "2702:27017"
    volumes:
      - ./mongo-db/data2:/data/db
      - ./scripts/keyfile:/scripts/keyfile
    command: "mongod --bind_ip_all --replSet my-replica-set --keyFile /scripts/keyfile"
    networks:
      - my-mongo-cluster
    restart: always

  # mongodb secondary 2
  mongod3:
    container_name: mongod3
    image: mongo
    ports:
      - "2703:27017"
    volumes:
      - ./mongo-db/data3:/data/db
      - ./scripts/keyfile:/scripts/keyfile
    command: "mongod --bind_ip_all --replSet my-replica-set --keyFile /scripts/keyfile"
    networks:
      - my-mongo-cluster
    restart: always

  # replica setup
  mongo-setup:
    image: mongo
    container_name: mongo-setup
    env_file:
      - .env
    depends_on:
      - mongod1
      - mongod2
      - mongod3
    volumes:
      - ./scripts/mongodb_rs_init.sh:/scripts/mongodb_rs_init.sh
    entrypoint: ["/bin/bash", "/scripts/mongodb_rs_init.sh"]
    networks:
      - my-mongo-cluster
    restart: on-failure

  mysql:
    image: mysql:latest
    container_name: mysql
    volumes:
      - db-vol:/var/lib/mysql
    networks:
      - local-network
    ports:
      - "3300:3306"
    env_file:
      - .env
    restart: always

  redis:
    image: redis
    container_name: redis
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD"
    # command: --requirepass $$REDIS_PASSWORD
    volumes:
      - redis-vol:/data
    networks:
      - local-network
    ports:
      - "6300:6379"
    env_file:
      - .env
    restart: always

volumes:
  db-vol:
    external: true
  mongo-data-vol1:
    external: true
  mongo-config-vol1:
    external: true
  mongo-data-vol2:
    external: true
  mongo-config-vol2:
    external: true
  # mongo-data-vol3:
  #   external: true
  # mongo-config-vol3:
  #   external: true
  redis-vol:
    external: true
networks:
  local-network:
    external: true
  my-mongo-cluster:
    external: true
